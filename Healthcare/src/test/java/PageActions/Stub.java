package PageActions;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

import CommonUtils.CUtil;

public class Stub {

	static WebDriver driver;
	static boolean flag = false;

	public Stub(WebDriver driver) {
		this.driver = driver;
	}

	public static void init() {
		String url = "file:///" + System.getProperty("user.dir") + "/src/test/resources/HTML files/Environments.html";
		CUtil.OpenBrowser(url);
		CUtil.waitForClickableElement(By.xpath("//a[contains(@href,'" + System.getProperty("environment") + "')]"));
		CUtil.click(By.xpath("//a[contains(@href,'" + System.getProperty("environment") + "')]"));
		CUtil.waitForVisibleElement(By.xpath("//a[text()='Log in']"));
		CUtil.click(By.xpath("//a[text()='Log in']"));
		flag = true;
	}

	public static void initESD() {
		String url = "file:///" + System.getProperty("user.dir")
				+ "/src/test/resources/HTML files/Environments%20(3).html";
		CUtil.OpenBrowser(url);
		if (!flag) {
			CUtil.setMainWindow(driver.getWindowHandle());
		}
		CUtil.waitForClickableElement(By.xpath("//*[@id='esdRole']"));
		CUtil.click(By.xpath("//*[@id='esdRole']"));
		CUtil.waitForVisibleElement(By.xpath("//input[@value='" + System.getProperty("environment") + "']"));
		CUtil.click(By.xpath("//input[@value='" + System.getProperty("environment") + "']"));
		String userName = CUtil.getText(By.xpath("//*[@id='esdTable']//tbody//tr[2]//td"));
		String passWord = CUtil.getText(By.xpath("//*[@id='esdTable']//tbody//tr[2]//td[2]"));
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		CUtil.click(By.xpath("//a[text()='Go to ESD']"));
		CUtil.switchToWindow("window3");
		CUtil.waitForVisibleElement(By.xpath("//*[@id='acceptButton']"));
		CUtil.click(By.xpath("//*[@id='acceptButton']"));
		CUtil.waitForVisibleElement(By.xpath("//*[@name='username']"));
		CUtil.type(By.xpath("//*[@name='username']"), userName);
		CUtil.click(By.xpath("//*[@id='buttonUserID']"));
		CUtil.waitForVisibleElement(By.xpath("//*[@name='password']"));
		CUtil.type(By.xpath("//*[@name='password']"), passWord);
		CUtil.click(By.xpath("//*[@id='buttonUserID']"));

	}

	public static void initCCR() {
		String url = "file:///" + System.getProperty("user.dir")
				+ "/src/test/resources/HTML files/Environments%20(3).html";
		CUtil.OpenBrowser(url);
		if (!flag) {
			CUtil.setMainWindow(driver.getWindowHandle());
		}
		CUtil.waitForClickableElement(By.xpath("//*[@id='ccrRole']"));
		CUtil.click(By.xpath("//*[@id='ccrRole']"));
		CUtil.waitForVisibleElement(By.xpath("//input[@value='" + System.getProperty("environment") + "']"));
		CUtil.click(By.xpath("//input[@value='" + System.getProperty("environment") + "']"));

	}

	public void typeSAML() {
		String SAML = "";
		CUtil.type(By.xpath("//*[@id='samlCCR']"), SAML);

	}

	public void clickSubmit() {
		CUtil.click(By.xpath("//form[@id='ccrForm']//input[@value='Submit'][contains(@class,'btn-success')]"));
		CUtil.switchToWindow("window1");
	}

}
